<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Arquitetura do Kubernetes on Amazon EKS Workshop</title>
    <link>/introduction/architecture/</link>
    <description>Recent content in Arquitetura do Kubernetes on Amazon EKS Workshop</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 03 Oct 2018 10:17:52 -0700</lastBuildDate>
    
	<atom:link href="/introduction/architecture/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Visão de Arquitetura</title>
      <link>/introduction/architecture/architecture_control_and_data_overview/</link>
      <pubDate>Wed, 03 Oct 2018 10:18:20 -0700</pubDate>
      
      <guid>/introduction/architecture/architecture_control_and_data_overview/</guid>
      <description>graph TB internet((internet)) kubectl{kubectl} subgraph ControlPlane api(API Server) controller(Controller Manager) scheduler(Scheduler) etcd(etcd) end subgraph worker1 kubelet1(kubelet) kube-proxy1(kube-proxy) subgraph docker1 subgraph podA containerA[container] end subgraph podB containerB[container] end end end internet--kube-proxy1 kubectl--api controller--api scheduler--api api--kubelet1 api--etcd kubelet1--containerA kubelet1--containerB kube-proxy1--containerA kube-proxy1--containerB classDef green fill:#9f6,stroke:#333,stroke-width:4px; classDef orange fill:#f96,stroke:#333,stroke-width:4px; classDef blue fill:#6495ed,stroke:#333,stroke-width:4px; class api blue; class internet green; class kubectl orange;  </description>
    </item>
    
    <item>
      <title>Plano de controle</title>
      <link>/introduction/architecture/architecture_control/</link>
      <pubDate>Wed, 03 Oct 2018 10:18:27 -0700</pubDate>
      
      <guid>/introduction/architecture/architecture_control/</guid>
      <description>graph TB kubectl{kubectl} subgraph ControlPlane api(API Server) controller(Controller Manager) scheduler(Scheduler) etcd(etcd) end kubectl--api controller--api scheduler--api api--kubelet api--etcd classDef green fill:#9f6,stroke:#333,stroke-width:4px; classDef orange fill:#f96,stroke:#333,stroke-width:4px; classDef blue fill:#6495ed,stroke:#333,stroke-width:4px; class api blue; class internet green; class kubectl orange;   Um ou mais servidores de API: ponto de entrada para REST / kubectl
 etcd: Armazenamento de chave/valor distribuído
 Controller-manager: Sempre avaliando o estado atual vs desejado
 Scheduler: Agendamentos de pods para worker nodes</description>
    </item>
    
    <item>
      <title>Plano de dados</title>
      <link>/introduction/architecture/architecture_worker/</link>
      <pubDate>Wed, 03 Oct 2018 10:18:27 -0700</pubDate>
      
      <guid>/introduction/architecture/architecture_worker/</guid>
      <description>graph TB internet((internet)) subgraph worker1 kubelet1(kubelet) kube-proxy1(kube-proxy) subgraph docker1 subgraph podA containerA[container] end subgraph podB containerB[container] end end end internet--kube-proxy1 api--kubelet1 kubelet1--containerA kubelet1--containerB kube-proxy1--containerA kube-proxy1--containerB classDef green fill:#9f6,stroke:#333,stroke-width:4px; classDef orange fill:#f96,stroke:#333,stroke-width:4px; classDef blue fill:#6495ed,stroke:#333,stroke-width:4px; class api blue; class internet green; class kubectl orange;   Feito de worker nodes
 kubelet: Atua como um canal entre o servidor da API e o node
 kube-proxy: Gerenciamento de tradução e roteamento de IP</description>
    </item>
    
    <item>
      <title>Configuração de cluster do Kubernetes</title>
      <link>/introduction/architecture/cluster_setup_options/</link>
      <pubDate>Wed, 03 Oct 2018 10:21:11 -0700</pubDate>
      
      <guid>/introduction/architecture/cluster_setup_options/</guid>
      <description>Além da solução gerenciada do Amazon EKS, há muitas ferramentas disponíveis para ajudar a inicializar e configurar um cluster Kubernetes autogerenciado. Eles incluem:
 Minikube – Desenvolvimento e Aprendizagem Kops – Aprendizagem, Desenvolvimento, Produção Kubeadm – Aprendizagem, Desenvolvimento, Produção Docker for Mac - Aprendizagem e Desenvolvimento  Juntamente com essas soluções de código aberto, há também muitas opções comerciais disponíveis.
Vamos dar uma olhada no Amazon EKS!</description>
    </item>
    
  </channel>
</rss>