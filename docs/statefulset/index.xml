<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Contêineres com informações de estado usando StatefulSets on Amazon EKS Workshop</title>
    <link>/statefulset/</link>
    <description>Recent content in Contêineres com informações de estado usando StatefulSets on Amazon EKS Workshop</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 07 Aug 2018 08:30:11 -0700</lastBuildDate>
    
	<atom:link href="/statefulset/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Defenir Storageclass</title>
      <link>/statefulset/storageclass/</link>
      <pubDate>Tue, 07 Aug 2018 08:30:11 -0700</pubDate>
      
      <guid>/statefulset/storageclass/</guid>
      <description>Introdução Dynamic Volume Provisioning allows storage volumes to be created on-demand. StorageClass should be pre-created to define which provisoner should be used and what parameters should be passed when dynamic provisioning is invoked. (See parameters for AWS EBS)
Define Storage Class Copy/Paste the following commands into your Cloud9 Terminal.
mkdir ~/environment/templates cd ~/environment/templates wget https://eksworkshop.com/statefulset/storageclass.files/mysql-storageclass.yml  Check the configuration of mysql-storageclass.yml file by following command.
cat ~/environment/templates/mysql-storageclass.yml  You can see provisioner is kubernetes.</description>
    </item>
    
    <item>
      <title>Crie o ConfigMap</title>
      <link>/statefulset/configmap/</link>
      <pubDate>Tue, 07 Aug 2018 08:30:11 -0700</pubDate>
      
      <guid>/statefulset/configmap/</guid>
      <description>Introdução ConfigMap permite dissociar artefatos de configuração e secrets do conteúdo da imagem para manter os aplicativos em contêiner portáteis. Usando o ConfigMap, você pode controlar independentemente a configuração do MySQL.
Crie o ConfigMap Copie/Cole os seguintes comandos no seu terminal Cloud9.
cd ~/environment/templates wget https://eksworkshop.com/statefulset/configmap.files/mysql-configmap.yml  Verifique a configuração do arquivo mysql-configmap.yml, seguindo o comando.
cat ~/environment/templates/mysql-configmap.yml  ConfigMap armazena master.cnf, slave.cnf e passa a inicializar os pods master e slave definidos no statefulset.</description>
    </item>
    
    <item>
      <title>Criar serviços</title>
      <link>/statefulset/services/</link>
      <pubDate>Tue, 07 Aug 2018 08:30:11 -0700</pubDate>
      
      <guid>/statefulset/services/</guid>
      <description>Introdução Serviço Kubernetes define um conjunto lógico de pods e uma política pela qual acessá-los. O serviço pode ser exposto de diferentes formas, especificando um tipo no serviceSpec. StatefulSet atualmente requer um Headless Service para controlar o domínio de seus Pods, alcançar diretamente cada Pod com entradas de DNS estáveis. Especificando &amp;ldquo;None&amp;rdquo; para o clusterIP, você pode criar o serviço Headless.
Criar serviços Copie/Cole os seguintes comandos no seu terminal Cloud9.</description>
    </item>
    
    <item>
      <title>Create StatefulSet</title>
      <link>/statefulset/statefulset/</link>
      <pubDate>Tue, 07 Aug 2018 08:30:11 -0700</pubDate>
      
      <guid>/statefulset/statefulset/</guid>
      <description>Introduction StatefulSet consists of serviceName, replicas, template and volumeClaimTemplates. serviceName is &amp;ldquo;mysql&amp;rdquo;, headless service we created in previous section, replicas is 3, the desired number of pod, template is the configuration of pod, volumeClaimTemplates is to claim volume for pod based on storageClassName, gp2 that we created in &amp;ldquo;Define Storageclass&amp;rdquo; section. Percona Xtrabackup is in template to clone source MySQL server to its slaves.
Create StatefulSet Copy/Paste the following commands into your Cloud9 Terminal.</description>
    </item>
    
    <item>
      <title>Teste o MySQL</title>
      <link>/statefulset/testmysql/</link>
      <pubDate>Tue, 07 Aug 2018 08:30:11 -0700</pubDate>
      
      <guid>/statefulset/testmysql/</guid>
      <description>Você pode usar mysql-client para enviar alguns dados para o master, mysql-0.mysql executando o comando.
kubectl run mysql-client --image=mysql:5.7 -i --rm --restart=Never --\ mysql -h mysql-0.mysql &amp;lt;&amp;lt;EOF CREATE DATABASE test; CREATE TABLE test.messages (message VARCHAR(250)); INSERT INTO test.messages VALUES (&#39;hello, from mysql-client&#39;); EOF  Execute o seguinte para testar slaves (mysql-read) recebeu o data.
kubectl run mysql-client --image=mysql:5.7 -it --rm --restart=Never --\ mysql -h mysql-read -e &amp;quot;SELECT * FROM test.messages&amp;quot;  A saída deve ficar assim.</description>
    </item>
    
    <item>
      <title>Teste de falha</title>
      <link>/statefulset/testfailure/</link>
      <pubDate>Tue, 07 Aug 2018 08:30:11 -0700</pubDate>
      
      <guid>/statefulset/testfailure/</guid>
      <description>container Pouco saudável MySQL container uses readiness probe by running mysql -h 127.0.0.1 -e &amp;lsquo;SELECT 1&amp;rsquo; on the server to make sure MySQL server is still active. Open a new terminal and simulate MySQL as being unresponsive by following command.
kubectl exec mysql-2 -c mysql -- mv /usr/bin/mysql /usr/bin/mysql.off  This command renames the /usr/bin/mysql command so that readiness probe can&amp;rsquo;t find it. During the next health check, the pod should report one of it&amp;rsquo;s containers is not healthy.</description>
    </item>
    
    <item>
      <title>Teste de escalonamento</title>
      <link>/statefulset/testscaling/</link>
      <pubDate>Tue, 07 Aug 2018 08:30:11 -0700</pubDate>
      
      <guid>/statefulset/testscaling/</guid>
      <description>Mais slaves podem ser adicionados ao MySQL Cluster para aumentar a capacidade de leitura. Isso pode ser feito seguindo o comando.
kubectl scale statefulset mysql --replicas=5  Você pode ver a mensagem que statefulset &amp;lsquo;mysql&amp;rsquo; escalou.
statefulset &amp;quot;mysql&amp;quot; scaled  Veja o progresso da escala ordenada e graciosa.
kubectl get pods -l app=mysql -w  NAME READY STATUS RESTARTS AGE mysql-0 2/2 Running 0 1d mysql-1 2/2 Running 0 1d mysql-2 2/2 Running 0 24m mysql-3 0/2 Init:0/2 0 8s mysql-3 0/2 Init:1/2 0 9s mysql-3 0/2 PodInitializing 0 11s mysql-3 1/2 Running 0 12s mysql-3 2/2 Running 0 16s mysql-4 0/2 Pending 0 0s mysql-4 0/2 Pending 0 0s mysql-4 0/2 Init:0/2 0 0s mysql-4 0/2 Init:1/2 0 10s mysql-4 0/2 PodInitializing 0 11s mysql-4 1/2 Running 0 12s mysql-4 2/2 Running 0 17s  Pode demorar alguns minutos para iniciar todos os pods.</description>
    </item>
    
    <item>
      <title>Limpar</title>
      <link>/statefulset/cleanup/</link>
      <pubDate>Tue, 07 Aug 2018 08:30:11 -0700</pubDate>
      
      <guid>/statefulset/cleanup/</guid>
      <description>Primeiro exclua o StatefulSet. Isso também excluirá os pods. Pode demorar um pouco.
kubectl delete statefulset mysql  Verifique se não há pods em execução executando o comando.
kubectl get pods -l app=mysql  No resources found.  Exclua o ConfigMap, Service e PVC, executando o comando.
kubectl delete configmap,service,pvc -l app=mysql  configmap &amp;quot;mysql-config&amp;quot; deleted service &amp;quot;mysql&amp;quot; deleted service &amp;quot;mysql-read&amp;quot; deleted persistentvolumeclaim &amp;quot;data-mysql-0&amp;quot; deleted persistentvolumeclaim &amp;quot;data-mysql-1&amp;quot; deleted persistentvolumeclaim &amp;quot;data-mysql-2&amp;quot; deleted  Parabéns!</description>
    </item>
    
  </channel>
</rss>